// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniProjet_BDA.Data;

#nullable disable

namespace MiniProjet_BDA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250417140857_bd")]
    partial class bd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiniProjet_BDA.Models.Defense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoomId");

                    b.ToTable("Defenses");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.DefenseEvaluation", b =>
                {
                    b.Property<int>("DefenseEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DefenseEvaluationId"));

                    b.Property<int?>("DefenseId")
                        .HasColumnType("int");

                    b.Property<int?>("JuryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Note")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DefenseEvaluationId");

                    b.HasIndex("DefenseId");

                    b.HasIndex("JuryId", "DefenseId")
                        .IsUnique()
                        .HasFilter("[JuryId] IS NOT NULL AND [DefenseId] IS NOT NULL");

                    b.ToTable("DefenseEvaluations");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.StudentEvaluation", b =>
                {
                    b.Property<int>("StudentEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentEvaluationId"));

                    b.Property<int?>("JuryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Note")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId1")
                        .HasColumnType("int");

                    b.HasKey("StudentEvaluationId");

                    b.HasIndex("StudentId");

                    b.HasIndex("StudentId1");

                    b.HasIndex("JuryId", "StudentId")
                        .IsUnique()
                        .HasFilter("[JuryId] IS NOT NULL AND [StudentId] IS NOT NULL");

                    b.ToTable("StudentEvaluations");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<int?>("Student1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Student2Id")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.HasIndex("Student1Id");

                    b.HasIndex("Student2Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Professor", b =>
                {
                    b.HasBaseType("MiniProjet_BDA.Models.User");

                    b.HasDiscriminator().HasValue("Professor");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Student", b =>
                {
                    b.HasBaseType("MiniProjet_BDA.Models.User");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Jury", b =>
                {
                    b.HasBaseType("MiniProjet_BDA.Models.Professor");

                    b.Property<int?>("DefenseId")
                        .HasColumnType("int");

                    b.HasIndex("DefenseId");

                    b.HasIndex("Id", "DefenseId")
                        .IsUnique()
                        .HasFilter("[DefenseId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Jury");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Defense", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MiniProjet_BDA.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Project");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.DefenseEvaluation", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Defense", "Defense")
                        .WithMany()
                        .HasForeignKey("DefenseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MiniProjet_BDA.Models.Jury", "Jury")
                        .WithMany()
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Defense");

                    b.Navigation("Jury");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Project", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Professor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MiniProjet_BDA.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Supervisor");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.StudentEvaluation", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Jury", "Jury")
                        .WithMany()
                        .HasForeignKey("JuryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MiniProjet_BDA.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MiniProjet_BDA.Models.Student", null)
                        .WithMany("Evaluations")
                        .HasForeignKey("StudentId1");

                    b.Navigation("Jury");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Team", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Student", "Student1")
                        .WithMany()
                        .HasForeignKey("Student1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MiniProjet_BDA.Models.Student", "Student2")
                        .WithMany()
                        .HasForeignKey("Student2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Student1");

                    b.Navigation("Student2");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Jury", b =>
                {
                    b.HasOne("MiniProjet_BDA.Models.Defense", "Defense")
                        .WithMany()
                        .HasForeignKey("DefenseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Defense");
                });

            modelBuilder.Entity("MiniProjet_BDA.Models.Student", b =>
                {
                    b.Navigation("Evaluations");
                });
#pragma warning restore 612, 618
        }
    }
}
